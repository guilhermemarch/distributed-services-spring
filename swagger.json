{
  "openapi": "3.0.0",
  "info": {
    "title": "Integrated Microservices Project",
    "description": "API documentation for Microservices A and B.",
    "version": "2.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Microservice A"
    },
    {
      "url": "http://localhost:8081",
      "description": "Microservice B"
    }
  ],
  "tags": [
    {
      "name": "Posts",
      "description": "Operations related to posts."
    },
    {
      "name": "Comments",
      "description": "Operations related to comments."
    }
  ],
  "paths": {
    "/api/posts/allPosts": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Retrieve all posts",
        "description": "Returns a list of all available posts.",
        "responses": {
          "200": {
            "description": "List of posts.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/api/posts": {
      "post": {
        "tags": [
          "Posts"
        ],
        "summary": "Create a new post",
        "description": "Adds a new post to the system.",
        "requestBody": {
          "description": "Post data to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCreateDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input."
          }
        }
      }
    },
    "/api/posts/{id}": {
      "get": {
        "tags": [
          "Posts"
        ],
        "summary": "Retrieve a post by ID",
        "description": "Returns a specific post based on the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the post to retrieve.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostDTO"
                }
              }
            }
          },
          "404": {
            "description": "Post not found."
          }
        }
      },
      "put": {
        "tags": [
          "Posts"
        ],
        "summary": "Update a post",
        "description": "Updates an existing post based on the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the post to update.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated post data.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Post updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input."
          },
          "404": {
            "description": "Post not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Posts"
        ],
        "summary": "Delete a post",
        "description": "Deletes a post based on the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the post to delete.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Post deleted successfully."
          },
          "404": {
            "description": "Post not found."
          }
        }
      }
    },
    "/api/posts/{id}/comments": {
      "get": {
        "tags": [
          "Comments"
        ],
        "summary": "Retrieve all comments",
        "description": "Returns a list of all available comments.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the post associated with the comment.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of comments.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommentDTO"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "post": {
        "tags": [
          "Comments"
        ],
        "summary": "Create a new comment",
        "description": "Adds a new comment to a post.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the post associated with the comment.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Comment data to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentCreateDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Comment created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input."
          }
        }
      }
    },
    "/api/posts/{id}/{commentId}": {
      "put": {
        "tags": [
          "Comments"
        ],
        "summary": "Update a comment",
        "description": "Updates an existing comment based on the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the post associated with the comment.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "description": "The ID of the comment to update.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Updated comment data.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentCreateDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comment updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input."
          },
          "404": {
            "description": "Comment not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Comments"
        ],
        "summary": "Delete a comment by id and commentId",
        "description": "Deletes a comment based on the provided ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the post associated with the comment.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "description": "The ID of the comment to delete.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Comment deleted successfully."
          },
          "404": {
            "description": "Comment not found."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "PostDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "example": 1
          },
          "id": {
            "type": "number",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Post Title"
          },
          "body": {
            "type": "string",
            "example": "Post body content."
          },
          "comments": {
            "type": "array",
            "items": {
              "example": {}
            }
          }
        }
      },
      "CommentDTO": {
        "type": "object",
        "properties": {
          "postId": {
            "type": "number",
            "example": 1
          },
          "id": {
            "type": "number",
            "example": 101
          },
          "name": {
            "type": "string",
            "example": "Pedro Soares"
          },
          "email": {
            "type": "string",
            "example": "pedro@gmail.com."
          },
          "body": {
            "type": "string",
            "example": "Comment content."
          }
        }
      },
      "PostCreateDTO": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Post Title"
          },
          "body": {
            "type": "string",
            "example": "Post body content."
          }
        }
      },
      "PostUpdateDTO": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Post Title"
          },
          "body": {
            "type": "string",
            "example": "Post body content."
          }
        }
      },
      "CommentCreateDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Pedro Soares"
          },
          "email": {
            "type": "string",
            "example": "pedro@gmail.com."
          },
          "body": {
            "type": "string",
            "example": "Comment content."
          }
        }
      }
    }
  }
}